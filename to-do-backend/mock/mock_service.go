// Code generated by MockGen. DO NOT EDIT.
// Source: service/service.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "go.mod/model"
)

// MockITodoService is a mock of ITodoService interface.
type MockITodoService struct {
	ctrl     *gomock.Controller
	recorder *MockITodoServiceMockRecorder
}

// MockITodoServiceMockRecorder is the mock recorder for MockITodoService.
type MockITodoServiceMockRecorder struct {
	mock *MockITodoService
}

// NewMockITodoService creates a new mock instance.
func NewMockITodoService(ctrl *gomock.Controller) *MockITodoService {
	mock := &MockITodoService{ctrl: ctrl}
	mock.recorder = &MockITodoServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITodoService) EXPECT() *MockITodoServiceMockRecorder {
	return m.recorder
}

// CreateTask mocks base method.
func (m *MockITodoService) CreateTask(id int, title string) *model.Todo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTask", id, title)
	ret0, _ := ret[0].(*model.Todo)
	return ret0
}

// CreateTask indicates an expected call of CreateTask.
func (mr *MockITodoServiceMockRecorder) CreateTask(id, title interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTask", reflect.TypeOf((*MockITodoService)(nil).CreateTask), id, title)
}

// GetAllTasks mocks base method.
func (m *MockITodoService) GetAllTasks() ([]*model.Todo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllTasks")
	ret0, _ := ret[0].([]*model.Todo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllTasks indicates an expected call of GetAllTasks.
func (mr *MockITodoServiceMockRecorder) GetAllTasks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTasks", reflect.TypeOf((*MockITodoService)(nil).GetAllTasks))
}
